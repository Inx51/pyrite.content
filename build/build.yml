name: '$(versionNumber)'

trigger:
- master

variables:
  vmImage: 'windows-latest'
  buildConfiguration: 'Release'
  versionMajor: 0
  versionMinor: 1
  versionPatch: 0
  versionMajorMinorPatch: '$(versionMajor).$(versionMinor).$(versionPatch)'
  versionRevision: $[counter(variables['versionMajorMinorPatch'], 0)]
  versionNumber: '$(versionMajorMinorPatch).$(versionRevision)'
  sourceDir: '$(Build.SourcesDirectory)/src'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build job
        pool:
          vmImage: $(vmImage)
        steps:
        - task: PowerShell@2
          displayName: Set the name of the build
          inputs:
            targetType: 'inline'
            script: |
              [string] $buildName = "$(versionNumber)"
              Write-Host "Setting the name of the build to '$buildName'."
              Write-Host "##vso[build.updatebuildnumber]$buildName"

        - script: |
            dotnet restore
          workingDirectory: '$(sourceDir)'
          displayName: 'dotnet restore'
          failOnStderr: True

        - script: |
            dotnet build --configuration $(buildConfiguration) /p:Version=$(versionNumber)
          workingDirectory: '$(sourceDir)'
          displayName: 'dotnet build'
          failOnStderr: True

        - script: |
            dotnet test --filter TestCategory=UnitTest --configuration $(buildConfiguration) --collect "Code coverage"
          workingDirectory: '$(Build.SourcesDirectory)/src'
          displayName: 'dotnet test'
          failOnStderr: True

        - script: |
            dotnet pack --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) -p:Version=$(versionNumber) -p:PackageVersion=$(versionNumber)
          workingDirectory: '$(sourceDir)'
          displayName: 'dotnet pack'
          failOnStderr: True

        - task: PublishBuildArtifacts@1
          displayName: 'publish artifact'
          inputs:
            pathToPublish: $(Build.ArtifactStagingDirectory)
            artifactName: artifact
  - stage: Deploy
    displayName: Deploy stages
    jobs:
      - job: Deploy
        displayName: Deploy job
        pool:
          vmImage: $(vmImage)
        steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            buildType: 'current'
            artifactName: 'artifact'
            targetPath: '$(Pipeline.Workspace)'
        - task: DotNetCoreCLI@2
          inputs:
            command: 'push'
            packagesToPush: '$(Pipeline.Workspace)/*.nupkg'
            nuGetFeedType: 'internal'
            publishVstsFeed: '6f28ef3e-8e78-4c64-b5d1-4c5573bc1c51/e46b9712-ba8f-425f-b100-b2f168bb98cc'



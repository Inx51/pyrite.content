name: '$(versionNumber)'

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  versionMajor: 0
  versionMinor: 1
  versionPatch: 0
  versionMajorMinorPatch: '$(versionMajor).$(versionMinor).$(versionPatch)'
  versionRevision: $[counter(variables['versionMajorMinorPatch'], 0)]
  versionNumber: '$(versionMajorMinorPatch).$(versionRevision)'

steps:
- task: PowerShell@2
  displayName: Set the name of the build
  inputs:
    targetType: 'inline'
    script: |
      [string] $buildName = "$(versionNumber)"
      Write-Host "Setting the name of the build to '$buildName'."
      Write-Host "##vso[build.updatebuildnumber]$buildName"

- script: |
    dotnet restore --configuration $(buildConfiguration) /p:Version=$(versionNumber)
  workingDirectory: '$(Build.SourcesDirectory)/src'
  displayName: 'dotnet restore'
  failOnStderr: True

- script: |
    dotnet build --configuration $(buildConfiguration) /p:Version=$(versionNumber)
  workingDirectory: '$(Build.SourcesDirectory)/src'
  displayName: 'dotnet build'
  failOnStderr: True

- script: |
    dotnet test --filter TestCategory=UnitTest --configuration $(buildConfiguration) --collect "Code coverage"
  workingDirectory: '$(Build.SourcesDirectory)/src'
  displayName: 'dotnet test'
  failOnStderr: True

- script: |
    dotnet pack --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) -p:Version=$(versionNumber) -p:PackageVersion=$(versionNumber)
  workingDirectory: '$(Build.SourcesDirectory)/src'
  displayName: 'dotnet build'
  failOnStderr: True

- task: PublishBuildArtifacts@1
  displayName: 'publish artifact'
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: artifact
    versioningScheme: byEnvVar
    versionEnvVar: versionMajorMinorPatch
